from aiogram import Router, types, Bot, F
from aiogram.utils.keyboard import InlineKeyboardBuilder

from my_bot.bot.utils.auxiliary import check_sub_channels, user_not_subscribed_message, referral_menu
from my_bot.bot.utils import database as db
from my_bot.bot.utils.config import referral_reward_price, bot_username

referral_bonus_router = Router()


@referral_bonus_router.message(F.text == 'üéÅ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –±–æ–Ω—É—Å')
async def show_referral_menu(message: types.Message, bot: Bot):
    if message.chat.type == 'private':
        if await check_sub_channels(message.from_user.id, bot):
            await message.reply('–ú–µ–Ω—é ¬´üéÅ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –±–æ–Ω—É—Å¬ª:', reply_markup=referral_menu)
        else:
            await user_not_subscribed_message(message, bot)


@referral_bonus_router.message(F.text == '–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –±–æ–Ω—É—Å? ‚ùì')
async def explain_referral_bonus(message: types.Message, bot: Bot):
    if await check_sub_channels(message.from_user.id, bot):
        message_text = (
            f"<b>–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –±–æ–Ω—É—Å?</b>\n\n"
            f"–ö–∞–∂–¥—ã–π –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–µ—Ç—Å—è –∫ –Ω–∞—à–µ–º—É –±–æ—Ç—É –ø–æ –≤–∞—à–µ–º—É –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—é, "
            f"–ø—Ä–∏–Ω–æ—Å–∏—Ç –≤–∞–º –∏ –µ–º—É —Å–∞–º–æ–º—É –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ, –Ω–æ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø—Ä–æ–π–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –±–æ—Ç–∞!\n\n"
            f"üéÅ <b>–í—ã–ø–ª–∞—Ç–∞ –∑–∞ –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</b> +{referral_reward_price}$\n\n"
            f"–ò–º–µ–µ—Ç–µ –∫–∞–Ω–∞–ª —Å –±–æ–ª–µ–µ —á–µ–º 3.000 –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º–∏? –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–π "
            f"<a href='https://t.me/+OqBTRBDNafk1M2Ji'>–ø–∞—Ä—Ç–Ω—ë—Ä—Å–∫–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ</a> –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!"
        )
        await message.answer(message_text, parse_mode="HTML")
    else:
        await user_not_subscribed_message(message, bot)


@referral_bonus_router.message(F.text == '–ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è üîó')
async def get_invitation_link(message: types.Message, bot: Bot):
    if await check_sub_channels(message.from_user.id, bot):
        keyboard = InlineKeyboardBuilder()
        keyboard.button(text="–ü–æ–¥–µ–ª–∏—Ç—å—Å—è",
                        url=f"tg://msg_url?url=https://t.me/{bot_username}?start={message.from_user.id}")

        user_id = message.from_user.id
        base_amount_per_referral = 0.20
        referral_count = await db.count_referrals(user_id)
        total_earned = base_amount_per_referral * referral_count

        reward_count_for_user = await db.count_referral_rewards_for_user(user_id)
        total_earned_for_user = base_amount_per_referral * reward_count_for_user

        message_text = (
            f"üéÅ <b>–ü–æ–ª—É—á–∞–π—Ç–µ +{referral_reward_price} $USDC –∑–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –¥—Ä—É–≥–∞!</b>\n\n"
            f"<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –≤–∞–º–∏ –ª—é–¥–µ–π:</b> {referral_count}\n"
            f"<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—É—á–∏–≤—à–∏—Ö –Ω–∞–≥—Ä–∞–¥—É:</b> {reward_count_for_user}\n"
            f"<b>–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ –Ω–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö:</b> {total_earned_for_user:.2f} $USDC\n\n"
            f"[!] –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ–π—á–∞—Å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –º—ã —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —ç—Ç–∏–º.\n\n"
            f"–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: <code>https://t.me/{bot_username}?start={user_id}</code>"
        )
        await message.answer(message_text, reply_markup=keyboard.as_markup(), disable_web_page_preview=True,
                             parse_mode="HTML")
    else:
        await user_not_subscribed_message(message, bot)
